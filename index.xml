<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:wfw="http://wellformedweb.org/CommentAPI/"><channel><title>KAbuKI Tech Blog</title><link>https://akira-fujii.github.io/</link><description>Recent content on KAbuKI Tech Blog</description><generator>Hugo</generator><language>ja</language><lastBuildDate>Tue, 10 Dec 2024 11:25:01 +0900</lastBuildDate><atom:link href="https://akira-fujii.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>ゲーム開発者におすすめの本</title><link>https://akira-fujii.github.io/posts/2024_12_08_23_55_27-fav-books/</link><pubDate>Sun, 08 Dec 2024 23:55:27 +0900</pubDate><guid>https://akira-fujii.github.io/posts/2024_12_08_23_55_27-fav-books/</guid><description>&lt;p>順次更新予定&lt;/p>
&lt;p>新卒向けの就活相談でよく紹介している本を記載しておきます。&lt;br>
特にプランナー・クライアントエンジニア志望の人向け、面接やESで書くことの引き出しになります。&lt;/p>
&lt;h1 id="全職種にオススメ">全職種にオススメ&lt;/h1>
&lt;p>&lt;style>
 .amazon-card {
 display: flex;
 flex-direction: column;
 align-items: flex-start;
 justify-content: center;
 border: 1px solid #ccc;
 border-radius: 8px;
 padding: 16px;
 margin: 16px 0;
 text-align: left;
 box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
 transition: transform 0.2s, box-shadow 0.2s;
 text-decoration: none;
 color: inherit;
 }

 .amazon-card:hover {
 transform: scale(1.02);
 box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);
 }

 .amazon-card img {
 max-width: 100%;
 height: auto;
 border-radius: 4px;
 margin-bottom: 12px;
 }

 .amazon-card-title {
 font-size: 16px;
 font-weight: bold;
 color: #333;
 text-decoration: none;
 }

 .amazon-card-title:hover {
 color: #0073e6;
 }
&lt;/style>

&lt;a href="https://www.amazon.co.jp/dp/4797357363?tag=kabukiblog0c" target="_blank" class="amazon-card">
 &lt;img border="0" src="https://images-fe.ssl-images-amazon.com/images/P/4797357363.09.MZZZZZZZ&amp;tag=kabukiblog0c">
 &lt;span class="amazon-card-title">3Dゲームをおもしろくする技術 実例から解き明かすゲームメカニクス・レベルデザイン・カメラのノウハウ&lt;/span>
&lt;/a>&lt;br>
ゲームの分析を始める上でオススメな本。とにかく具体例が多くてわかりやすい。&lt;/p></description></item><item><title>JCOM回線でAtcoderの表示バグを直す</title><link>https://akira-fujii.github.io/tils/2024_12_08_23_24_17-jcom/</link><pubDate>Sun, 08 Dec 2024 23:24:17 +0900</pubDate><guid>https://akira-fujii.github.io/tils/2024_12_08_23_24_17-jcom/</guid><description>&lt;p>Jcom側のセキュリティフィルタ(Guard)に画像読み込みがブロックされてしまい、&lt;br>
atcoderの表示崩れが発生している。&lt;/p>
&lt;p>&lt;a href="https://x.com/atcoder/status/1833065071251206573">https://x.com/atcoder/status/1833065071251206573&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>【お知らせ】&lt;br>
一部ISP(J:COM等)をご利用の場合、AtCoderのサイトデザインが崩れたり、画像が表示されない現象が報告されています。&lt;br>
もしこの現象に遭遇された場合は、以下の対処法をお試しください:&lt;br>
・別の回線を使用する&lt;br>
(例: 学校/職場のWi-Fi、VPN、テザリングなど)&lt;/p>
&lt;/blockquote>
&lt;p>これを直すには、Jcomメッシュwi-fiというアプリを入れて&lt;br>
atcoderのドメインをホワイトリストに登録すれば良い。&lt;br>
（入居時に案内される契約周りのアプリとはまた別もの。）&lt;/p>
&lt;h2 id="やり方">やり方&lt;/h2>
&lt;ul>
&lt;li>Jcomメッシュwi-fiなるアプリをインストール
&lt;ul>
&lt;li>&lt;a href="https://cs.myjcom.jp/knowledgeDetail?an=002000390">https://cs.myjcom.jp/knowledgeDetail?an=002000390&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>自宅をガード（nイベント）をタップ&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://akira-fujii.github.io/tils/2024_12_08_23_24_17-jcom/images/IMG_6524.jpg" width="300">
&lt;/figure>

&lt;ul>
&lt;li>atcoderがブロックされているのを確認する&lt;/li>
&lt;li>右上の「&amp;hellip;」メニューから「許可リストを追加」みたいな項目を選ぶ&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://akira-fujii.github.io/tils/2024_12_08_23_24_17-jcom/images/IMG_6522.jpg" width="300">
&lt;/figure>

&lt;ul>
&lt;li>webサイトの許可リストに、&lt;code>www.atcoder.jp&lt;/code>を追加する&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://akira-fujii.github.io/tils/2024_12_08_23_24_17-jcom/images/IMG_6523.jpg" width="300">
&lt;/figure>

&lt;p>以上でテザリングしなくてもatcoderにアクセス可能となる。&lt;/p></description></item><item><title>About</title><link>https://akira-fujii.github.io/about/</link><pubDate>Sat, 07 Dec 2024 23:36:28 +0900</pubDate><guid>https://akira-fujii.github.io/about/</guid><description>&lt;figure>&lt;img src="https://akira-fujii.github.io/images/icon_kbk-1.png" width="200">
&lt;/figure>

&lt;p>ゲーム制作サークル Studio Kabuki の技術ブログ。&lt;br>
グローバルに楽しんでもらえるゲームを作っていきます。&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h1 id="開発メンバー">開発メンバー&lt;/h1>
&lt;ul>
&lt;li>Aki (ゲームプログラマー／企画)
&lt;ul>
&lt;li>&lt;a href="https://akira-fujii.github.io/aki/">ポートフォリオ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://x.com/StudioKabuki">連絡先&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Aki(ゲームプログラマー兼企画)</title><link>https://akira-fujii.github.io/aki/</link><pubDate>Sat, 07 Dec 2024 23:36:28 +0900</pubDate><guid>https://akira-fujii.github.io/aki/</guid><description>&lt;p>ゲームプログラマー兼企画&lt;/p>
&lt;h2 id="経験">経験&lt;/h2>
&lt;p>学生時代2年＋社会人3年のゲーム開発経験を持つゲームプログラマー（クライアントエンジニア）です。&lt;br>
UnityとC#を主に使用し、本業では運用型ソーシャルゲームの開発に携わっています。&lt;/p>
&lt;p>過去にはハイパーカジュアルゲームの企画立案・開発を行い、&lt;br>
自ら考案したゲーム3本がUSアプリストア無料ランキング1位を獲得。&lt;br>
さらに30以上のタイトル開発に関与しました。&lt;br>
数学や物理の知識を活かし、気持ち良い操作感やプレイフィールの追求を得意としています。&lt;/p>
&lt;h2 id="登壇執筆">登壇・執筆&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://techbookfest.org/product/7DLTppLS5fXb8b8S1PPeUT?productVariantID=pGS6arJL13QesFPdHeZtjC">MIXI TECH NOTE #11 | UnityでDiscord内マルチ通信ゲームを作ろう！（寄稿）&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://youtu.be/_8pki1sahZw?si=NOkSpvsk0Wo2DjqQ&amp;amp;t=830">MIXI TECH CONFERENCE 2023 | 学校教育支援の技術解剖と21卒エンジニアが教材開発で習得したエンジニアリングスキル&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="連絡先">連絡先&lt;/h2>
&lt;p>&lt;a href="https://x.com/StudioKabuki">twitter&lt;/a>&lt;/p></description></item><item><title>hugo new で生成されるファイル名に自動でタイムスタンプをつける</title><link>https://akira-fujii.github.io/tils/2024-12-07-23-36-28-timestamp/</link><pubDate>Sat, 07 Dec 2024 23:36:28 +0900</pubDate><guid>https://akira-fujii.github.io/tils/2024-12-07-23-36-28-timestamp/</guid><description>&lt;p>新しい記事を書くときには&lt;br>
&lt;code>hugo new カテゴリ/記事のファイル名&lt;/code>&lt;br>
このコマンドでテンプレート付きのmdファイルが自動生成される。&lt;/p>
&lt;p>記事が増えてくると管理が大変になるんで、ファイル名にはタイムスタンプを割り当てたいところ。&lt;br>
（&lt;code>2024-12-07-タイトル.md&lt;/code>みたいな感じ）&lt;/p>
&lt;p>けど、これを指定するオプションはどうやらないらしい・・・ 🥹&lt;/p>
&lt;p>毎回タイムスタンプ手打ちするのもばからしいので、シェルスクリプトを作った。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh:hugo_new.sh" data-lang="sh:hugo_new.sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 引数からカテゴリとタイトルを取得&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CATEGORY&lt;span style="color:#f92672">=&lt;/span>$1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TITLE&lt;span style="color:#f92672">=&lt;/span>$2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># タイムスタンプを取得（例: 2024-12-07-10-30-45）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TIMESTAMP&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>date +&lt;span style="color:#e6db74">&amp;#34;%Y-%m-%d-%H-%M-%S&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Hugo new コマンド実行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FILENAME&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$CATEGORY&lt;span style="color:#e6db74">/&lt;/span>$TIMESTAMP&lt;span style="color:#e6db74">-&lt;/span>$TITLE&lt;span style="color:#e6db74">.md&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hugo new &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$FILENAME&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 結果表示&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;ファイルが作成されました: &lt;/span>$FILENAME&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>これで &lt;code>./hugo_new.sh posts hoge&lt;/code> みたいに呼び出すとタイムスタンプ付きで出力できる。&lt;/p>
&lt;p>他にもいい感じにしてる人がいた↓&lt;br>
(&lt;a href="https://techblog.sgr-ksmt.dev/2016/02/05/hugo_new_post/">https://techblog.sgr-ksmt.dev/2016/02/05/hugo_new_post/&lt;/a>)&lt;/p></description></item><item><title>Hugo:Markdownファイルへの画像ペーストを楽にする(VSCode)</title><link>https://akira-fujii.github.io/tils/2024-12-07-23-31-06-image/</link><pubDate>Sat, 07 Dec 2024 23:31:06 +0900</pubDate><guid>https://akira-fujii.github.io/tils/2024-12-07-23-31-06-image/</guid><description>&lt;p>hugoでは画像を&lt;code>static&lt;/code>フォルダに配置することで、.md内から呼び出せるようになる&amp;hellip;&lt;/p>
&lt;p>んだけど、撮ったスクショとかをいちいち&lt;code>static&lt;/code>に移動するのはめんどい。&lt;br>
Github然り、たいていのブラウザのマークダウンエディタは　画像をペーストするだけでアップロードもされて便利だ。&lt;/p>
&lt;p>そこで、VSCode上でも似たような挙動を再現できないか検討。&lt;br>
結果、.mdに画像をコピペしたら勝手に&lt;code>static&lt;/code>へ保存されるようにしてみた。&lt;/p>
&lt;p>デフォルトでは.mdと同じ階層にコピーされてしまうので、ワークスペースの設定ファイルをこんな感じで変えればよい。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;markdown.copyFiles.destination&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;*&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;${documentWorkspaceFolder}/simple/static/images/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://code.visualstudio.com/updates/v1_79#_markdowncopyfilesdestination">https://code.visualstudio.com/updates/v1_79#_markdowncopyfilesdestination&lt;/a>&lt;/p>
&lt;p>実際に.mdで画像を呼び出すためのコードはこんな感じ&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。サイズ指定もできて便利。&lt;/p>
&lt;pre tabindex="0">&lt;code>{{&amp;lt; figure src=&amp;#34;/images/画像名.png&amp;#34; width=&amp;#34;300&amp;#34; &amp;gt;}}	
&lt;/code>&lt;/pre>&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>(ちなみにコードブロックにhugoのショートコードを書くときは、エスケープする必要がある。&lt;a href="https://maku77.github.io/p/9tg2m7q/">参考&lt;/a>)&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>マークダウン形式でポートフォリオサイトを作る</title><link>https://akira-fujii.github.io/posts/2024-12-07-00-00-00-blog/</link><pubDate>Sat, 07 Dec 2024 21:42:48 +0900</pubDate><guid>https://akira-fujii.github.io/posts/2024-12-07-00-00-00-blog/</guid><description>&lt;h1 id="概要">概要&lt;/h1>
&lt;p>競技プログラミングやC++の勉強を始めたのを機に、学習ログ兼ポートフォリオ的なサイトを作ることにした。&lt;/p>
&lt;h2 id="要件">要件&lt;/h2>
&lt;ul>
&lt;li>ブログや自作の技術書を掲載できるポートフォリオサイトを作る。&lt;/li>
&lt;li>フロントエンド開発に自信がないため、簡単に運用できる仕組みにする。&lt;/li>
&lt;li>Markdownでブログを記述し、そのまま公開できる仕組みを構築する。
&lt;ul>
&lt;li>&lt;code>Hugo&lt;/code>というフレームワークを使用。スター数が多く信頼できそうだったため採用。&lt;/li>
&lt;li>テーマ次第でブログ以外にドキュメントやリファレンスの作成も可能。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>デプロイはシンプルにGitで&lt;code>.md&lt;/code>ファイルをプッシュするだけで完了。
&lt;ul>
&lt;li>最初は無料がいいので、GitHub Pagesでホストする。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="やったこと">やったこと&lt;/h2>
&lt;p>長くなったのでそれぞれ別記事に分けた。&lt;br>
できるだけ運用を楽にしたいのでちょっと工夫。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://akira-fujii.github.io/tils/2024-12-07-02-00-00-test/">環境構築〜デプロイまでで参考にしたサイト&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://akira-fujii.github.io/tils/2024-12-07-23-31-06-image/">Hugo:Markdownファイルへの画像ペーストを楽にする&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://akira-fujii.github.io/tils/2024-12-07-23-36-28-timestamp/">hugo new で生成されるファイル名に自動でタイムスタンプをつける&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Hugo参考サイト</title><link>https://akira-fujii.github.io/tils/2024-12-07-02-00-00-test/</link><pubDate>Thu, 05 Dec 2024 18:48:36 +0900</pubDate><guid>https://akira-fujii.github.io/tils/2024-12-07-02-00-00-test/</guid><description>&lt;p>参考になったサイトをメモ&lt;/p>
&lt;h2 id="概要">概要&lt;/h2>
&lt;ul>
&lt;li>クイックスタート
&lt;ul>
&lt;li>ここが参考になった&lt;/li>
&lt;li>&lt;a href="https://blog.chick-p.work/blog/hugo-site-directory">https://blog.chick-p.work/blog/hugo-site-directory&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>HugoをGithub Pagesにデプロイする
&lt;ul>
&lt;li>この記事の後半を参考にGithub Actionsを作成&lt;/li>
&lt;li>&lt;a href="https://zenn.dev/st_little/articles/create-blog-site-with-hugo">https://zenn.dev/st_little/articles/create-blog-site-with-hugo&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="テーマ">テーマ&lt;/h2>
&lt;p>気になったテーマをメモ&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/wayjam/hugo-theme-fluency">Fluency&lt;/a>&lt;/p>
&lt;ul>
&lt;li>このサイトのテーマ&lt;/li>
&lt;li>シンプルでバナー画像等を用意する必要もなさそうだったので採用。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://amethyst.bencuan.me/">Amethyst&lt;/a>&lt;/p>
&lt;ul>
&lt;li>ドキュメント制作に向いてそう&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item></channel></rss>